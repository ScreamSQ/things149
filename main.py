import logging
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import os
from datetime import datetime
now = datetime.now() 
logging.basicConfig(level=logging.INFO)


bot = Bot(token='6047987391:AAFAkISTxTxTWUgHyBNZFMQZ1Z44dhLgYIU')
if not os.path.exists('photos'):
    os.makedirs('photos')
if not os.path.exists('audio'):
    os.makedirs('audio')
dp = Dispatcher(bot)
if not os.path.exists('stickers'):
    os.makedirs('stickers')
if not os.path.exists('voice_messages'):
    os.makedirs('voice_messages')

@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤ –∞–Ω–æ–Ω–∏–º–Ω–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–µ –∫–∞–Ω–∞–ª–∞ <b>–ú—ã—Å–ª–∏ 149</b>\n\n\nüöÄ –ù–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –≤—Å—ë, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ, –∏ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ <b>–±–æ—Ç –æ–ø—É–±–ª–∏–∫—É–µ—Ç</b> –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–µ –±—É–¥–µ—Ç –∑–Ω–∞—Ç—å –æ—Ç –∫–æ–≥–æ.\n\n–Ø –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —Ñ–æ—Ä–º–∞—Ç—ã: —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –≥–æ–ª–æ—Å–æ–≤—ã–µ (.mp3), –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å—Ç–∏–∫–µ—Ä (–Ω–µ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π), –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è", parse_mode='HTML')

@dp.message_handler(commands=['menu'])
async def menu_command(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤ –∞–Ω–æ–Ω–∏–º–Ω–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–µ –∫–∞–Ω–∞–ª–∞ <b>–ú—ã—Å–ª–∏ 149</b>\n\n\nüöÄ –ù–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –≤—Å—ë, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ, –∏ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ <b>–±–æ—Ç –æ–ø—É–±–ª–∏–∫—É–µ—Ç</b> –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–µ –±—É–¥–µ—Ç –∑–Ω–∞—Ç—å –æ—Ç –∫–æ–≥–æ.\n\n–Ø –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —Ñ–æ—Ä–º–∞—Ç—ã: —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –≥–æ–ª–æ—Å–æ–≤—ã–µ (.mp3), –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å—Ç–∏–∫–µ—Ä (–Ω–µ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π), –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è", parse_mode='HTML')


@dp.message_handler()
async def send_message_to_channel(message: types.Message):
    username = message.from_user.username
    user_id = message.from_user.id
    try:

        await bot.send_message(chat_id='–∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞', text=f'üì© <b>–ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!</b>\n\n{message.text}\n\n<i>–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞–ø–∏—à–∏ –º–Ω–µ –≤ –ª–∏—á–∫—É</i>', parse_mode='HTML')
        await message.answer("‚úÖ <b>–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª!</b>", parse_mode='HTML')
    except Exception as e:
        await message.answer("‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.</b>", parse_mode='HTML')

@dp.message_handler(content_types=['photo'])
async def photo_handler(message: types.Message):
    photo = message.photo[-1]
    username = message.from_user.username
    user_id = message.from_user.id
    now = datetime.now() 
    current_time = now.strftime("%H:%M:%S")
    caption = message.caption 
    file_id = photo.file_id
    file_path = f'photos/{file_id}.jpg'
    await photo.download(file_path) 
    with open(file_path, 'rb') as photo_file:
        try:            
            
            await bot.send_photo(chat_id='–∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞', photo=photo_file, caption=caption)
            await message.answer("‚úÖ <b>–§–æ—Ç–æ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª!</b>", parse_mode='HTML')
        except Exception as e:
            await message.answer("‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.</b>", parse_mode='HTML')

@dp.message_handler(content_types=['audio'])
async def audio_handler(message: types.Message):
    audio = message.audio
    caption = message.caption 
    file_id = audio.file_id
    file_path = f'audio/{file_id}.mp3'
    await audio.download(file_path) 
    username = message.from_user.username
    user_id = message.from_user.id
    now = datetime.now() 
    current_time = now.strftime("%H:%M:%S")
    with open(file_path, 'rb') as audio_file:
        try:
            
            await bot.send_audio(chat_id='–∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞', audio=audio_file, caption=caption)
            await message.answer("‚úÖ <b>–ê—É–¥–∏–æ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª!</b>", parse_mode='HTML')
        except Exception as e:
            await message.answer("‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞—É–¥–∏–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.</b>", parse_mode='HTML')
if not os.path.exists('video'):
    os.makedirs('video')
@dp.message_handler(content_types=['video'])
async def video_handler(message: types.Message):
    video = message.video
    caption = message.caption 
    file_id = video.file_id
    file_path = f'video/{file_id}.mp4'
    await video.download(file_path)
    username = message.from_user.username
    user_id = message.from_user.id
    now = datetime.now() 
    current_time = now.strftime("%H:%M:%S") 
    
    with open(file_path, 'rb') as video_file:
        try:
         
            await bot.send_video(chat_id='–∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞', video=video_file, caption=caption)
            await message.answer("‚úÖ <b>–í–∞—à–µ –≤–∏–¥–µ–æ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª!</b>", parse_mode='HTML')
        except Exception as e:
            await message.answer("‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.</b>", parse_mode='HTML')
@dp.message_handler(content_types=['sticker'])
async def sticker_handler(message: types.Message):
    sticker = message.sticker
    file_id = sticker.file_id
    file_path = f'stickers/{file_id}.webp'
    await sticker.download(file_path) # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏–∫–µ—Ä –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é stickers
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä –≤ –∫–∞–Ω–∞–ª
    username = message.from_user.username
    user_id = message.from_user.id
    now = datetime.now() 
    current_time = now.strftime("%H:%M:%S")
    with open(file_path, 'rb') as sticker_file:
        try:
            
     
            await bot.send_sticker(chat_id='–∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞', sticker=sticker_file)
            await message.answer("‚úÖ <b>–°—Ç–∏–∫–µ—Ä –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª!</b>", parse_mode='HTML')
        except:
            await message.answer("‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∏–∫–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.</b>", parse_mode='HTML')
@dp.message_handler(content_types=['voice'])
async def voice_handler(message: types.Message):
    voice = message.voice
    file_id = voice.file_id
    file_path = f'voice_messages/{file_id}.ogg'
    await voice.download(file_path) # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é voice_messages
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
    username = message.from_user.username
    user_id = message.from_user.id
    now = datetime.now() 
    current_time = now.strftime("%H:%M:%S")
    with open(file_path, 'rb') as voice_file:
        try:
           
            await bot.send_voice(chat_id='-1001929214018', voice=voice_file)
            await message.answer("‚úÖ <b>–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª!</b>", parse_mode='HTML')
        except:
            await message.answer("‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.</b>", parse_mode='HTML')
        
    
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
